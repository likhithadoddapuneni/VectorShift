{"ast":null,"code":"var _jsxFileName = \"/Users/rahul/Downloads/Vector_Shift/frontend/src/integrations/hubspot.js\",\n  _s = $RefreshSig$();\n// hubspot.js\nimport { useState, useEffect } from 'react';\nimport { Box, Button, CircularProgress } from '@mui/material';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const HubSpotIntegration = ({\n  user,\n  org,\n  integrationParams,\n  setIntegrationParams\n}) => {\n  _s();\n  const [isConnected, setIsConnected] = useState(false);\n  const [isConnecting, setIsConnecting] = useState(false);\n\n  // Function to open OAuth in a new window\n  const handleConnectClick = async () => {\n    try {\n      setIsConnecting(true);\n      const formData = new FormData();\n      formData.append('user_id', user);\n      formData.append('org_id', org);\n      const response = await axios.post(`http://localhost:8000/integrations/hubspot/authorize`, formData);\n      const authURL = response === null || response === void 0 ? void 0 : response.data;\n      const newWindow = window.open(authURL, 'HubSpot Authorization', 'width=600, height=600');\n\n      // Polling for the window to close\n      const pollTimer = window.setInterval(() => {\n        if ((newWindow === null || newWindow === void 0 ? void 0 : newWindow.closed) !== false) {\n          window.clearInterval(pollTimer);\n          handleWindowClosed();\n        }\n      }, 200);\n    } catch (e) {\n      var _e$response, _e$response$data;\n      setIsConnecting(false);\n      alert(e === null || e === void 0 ? void 0 : (_e$response = e.response) === null || _e$response === void 0 ? void 0 : (_e$response$data = _e$response.data) === null || _e$response$data === void 0 ? void 0 : _e$response$data.detail);\n    }\n  };\n\n  // Function to handle logic when the OAuth window closes\n  const handleWindowClosed = async () => {\n    try {\n      const formData = new FormData();\n      formData.append('user_id', user);\n      formData.append('org_id', org);\n      const response = await axios.post(`http://localhost:8000/integrations/hubspot/credentials`, formData);\n      const credentials = response.data;\n      if (credentials) {\n        setIsConnecting(false);\n        setIsConnected(true);\n        setIntegrationParams(prev => ({\n          ...prev,\n          credentials: credentials,\n          type: 'HubSpot'\n        }));\n      }\n      setIsConnecting(false);\n    } catch (e) {\n      var _e$response2, _e$response2$data;\n      setIsConnecting(false);\n      alert(e === null || e === void 0 ? void 0 : (_e$response2 = e.response) === null || _e$response2 === void 0 ? void 0 : (_e$response2$data = _e$response2.data) === null || _e$response2$data === void 0 ? void 0 : _e$response2$data.detail);\n    }\n  };\n  useEffect(() => {\n    if (integrationParams !== null && integrationParams !== void 0 && integrationParams.credentials) {\n      setIsConnected(true);\n    }\n  }, [integrationParams === null || integrationParams === void 0 ? void 0 : integrationParams.credentials]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 2\n      },\n      children: \"Parameters\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: isConnected ? () => {} : handleConnectClick,\n      color: isConnected ? 'success' : 'primary',\n      disabled: isConnecting,\n      style: {\n        pointerEvents: isConnected ? 'none' : 'auto',\n        cursor: isConnected ? 'default' : 'pointer',\n        opacity: isConnected ? 1 : undefined\n      },\n      children: isConnected ? 'HubSpot Connected' : isConnecting ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n        size: 20\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 61\n      }, this) : 'Connect to HubSpot'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(HubSpotIntegration, \"YVzh0k4rAm9dKRmEfKk5oscD40o=\");\n_c = HubSpotIntegration;\nvar _c;\n$RefreshReg$(_c, \"HubSpotIntegration\");","map":{"version":3,"names":["useState","useEffect","Box","Button","CircularProgress","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","HubSpotIntegration","user","org","integrationParams","setIntegrationParams","_s","isConnected","setIsConnected","isConnecting","setIsConnecting","handleConnectClick","formData","FormData","append","response","post","authURL","data","newWindow","window","open","pollTimer","setInterval","closed","clearInterval","handleWindowClosed","e","_e$response","_e$response$data","alert","detail","credentials","prev","type","_e$response2","_e$response2$data","children","sx","mt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","color","disabled","style","pointerEvents","cursor","opacity","undefined","size","_c","$RefreshReg$"],"sources":["/Users/rahul/Downloads/Vector_Shift/frontend/src/integrations/hubspot.js"],"sourcesContent":["// hubspot.js\nimport { useState, useEffect } from 'react';\nimport {\n  Box,\n  Button,\n  CircularProgress\n} from '@mui/material';\nimport axios from 'axios';\n\nexport const HubSpotIntegration = ({ user, org, integrationParams, setIntegrationParams }) => {\n  const [isConnected, setIsConnected] = useState(false);\n  const [isConnecting, setIsConnecting] = useState(false);\n\n  // Function to open OAuth in a new window\n  const handleConnectClick = async () => {\n    try {\n      setIsConnecting(true);\n      const formData = new FormData();\n      formData.append('user_id', user);\n      formData.append('org_id', org);\n\n      const response = await axios.post(`http://localhost:8000/integrations/hubspot/authorize`, formData);\n      const authURL = response?.data;\n      const newWindow = window.open(authURL, 'HubSpot Authorization', 'width=600, height=600');\n\n      // Polling for the window to close\n      const pollTimer = window.setInterval(() => {\n        if (newWindow?.closed !== false) {\n          window.clearInterval(pollTimer);\n          handleWindowClosed();\n        }\n      }, 200);\n    } catch (e) {\n      setIsConnecting(false);\n      alert(e?.response?.data?.detail);\n    }\n  };\n\n  // Function to handle logic when the OAuth window closes\n  const handleWindowClosed = async () => {\n    try {\n      const formData = new FormData();\n      formData.append('user_id', user);\n      formData.append('org_id', org);\n\n      const response = await axios.post(`http://localhost:8000/integrations/hubspot/credentials`, formData);\n      const credentials = response.data;\n\n      if (credentials) {\n        setIsConnecting(false);\n        setIsConnected(true);\n        setIntegrationParams(prev => ({ ...prev, credentials: credentials, type: 'HubSpot' }));\n      }\n      setIsConnecting(false);\n    } catch (e) {\n      setIsConnecting(false);\n      alert(e?.response?.data?.detail);\n    }\n  };\n\n  useEffect(() => {\n    if (integrationParams?.credentials) {\n      setIsConnected(true);\n    }\n  }, [integrationParams?.credentials]);\n\n  return (\n    <>\n      <Box sx={{ mt: 2 }}>Parameters</Box>\n      <Button\n        onClick={isConnected ? () => {} : handleConnectClick}\n        color={isConnected ? 'success' : 'primary'}\n        disabled={isConnecting}\n        style={{\n          pointerEvents: isConnected ? 'none' : 'auto',\n          cursor: isConnected ? 'default' : 'pointer',\n          opacity: isConnected ? 1 : undefined\n        }}\n      >\n        {isConnected ? 'HubSpot Connected' : isConnecting ? <CircularProgress size={20} /> : 'Connect to HubSpot'}\n      </Button>\n    </>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}